{{- if .Values.postgresql.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: postgres
data:
  POSTGRES_USER: {{ .Values.postgresql.auth.username | quote }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.auth.password | quote }}
  POSTGRES_DB: {{ .Values.postgresql.auth.database | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: postgres
spec:
  type: {{ .Values.postgresql.service.type }}
  selector:
    app: postgres
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        envFrom:
        - configMapRef:
            name: postgres-config
        ports:
        - containerPort: 5432
        {{- if .Values.postgresql.resources }}
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.postgresql.persistence.enabled }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        {{- end }}
        readinessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - {{ .Values.postgresql.auth.username }}
          initialDelaySeconds: 5
          periodSeconds: 5
      {{- if .Values.postgresql.persistence.enabled }}
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
      {{- end }}
{{- if .Values.postgresql.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.postgresql.persistence.storageClass }}
  storageClassName: {{ .Values.postgresql.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.postgresql.persistence.size }}
{{- end }}
{{- end }}

{{- if not .Values.postgresql.auth.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "preparr.postgresql.secretName" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: postgres
type: Opaque
stringData:
  password: {{ .Values.postgresql.auth.password | quote }}
{{- end }}
---
{{- if and .Values.sonarr.enabled (not .Values.sonarr.auth.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "preparr.componentSecretName" (dict "root" . "componentName" "sonarr" "local" .Values.sonarr) }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: sonarr
type: Opaque
stringData:
  admin-password: {{ .Values.sonarr.adminPassword | quote }}
  api-key: {{ .Values.sonarr.apiKey | quote }}
{{- end }}
---
{{- if and .Values.radarr.enabled (not .Values.radarr.auth.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "preparr.componentSecretName" (dict "root" . "componentName" "radarr" "local" .Values.radarr) }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: radarr
type: Opaque
stringData:
  admin-password: {{ .Values.radarr.adminPassword | quote }}
  api-key: {{ .Values.radarr.apiKey | quote }}
{{- end }}
---
{{- if and .Values.prowlarr.enabled (not .Values.prowlarr.auth.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "preparr.componentSecretName" (dict "root" . "componentName" "prowlarr" "local" .Values.prowlarr) }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: prowlarr
type: Opaque
stringData:
  admin-password: {{ .Values.prowlarr.adminPassword | quote }}
  api-key: {{ .Values.prowlarr.apiKey | quote }}
{{- end }}
---
{{- if and .Values.qbittorrent.enabled (not .Values.qbittorrent.auth.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "preparr.componentSecretName" (dict "root" . "componentName" "qbittorrent" "local" .Values.qbittorrent) }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "preparr.labels" . | nindent 4 }}
    app: qbittorrent
type: Opaque
stringData:
  username: {{ .Values.qbittorrent.auth.username | quote }}
  password: {{ .Values.qbittorrent.auth.password | quote }}
{{- end }}

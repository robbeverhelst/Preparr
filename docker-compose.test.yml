version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: servarr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  sonarr:
    image: linuxserver/sonarr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - SERVARR_API_KEY=a1b2c3d4e5f67890123456789abcdef0
    ports:
      - "8989:8989"
    volumes:
      - sonarr_config:/config
      - ./test/tv:/tv
      - ./test/downloads:/downloads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - WEBUI_PORT=8080
    ports:
      - "8080:8080"
    volumes:
      - qbittorrent_config:/config
      - ./test/downloads:/downloads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  preparr:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      # PostgreSQL Configuration
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: servarr
      
      # Servarr Configuration
      SERVARR_URL: http://sonarr:8989
      SERVARR_TYPE: auto
      SERVARR_API_KEY: a1b2c3d4e5f67890123456789abcdef0
      SERVARR_ADMIN_USER: robbeverhelst
      SERVARR_ADMIN_PASSWORD: secure123
      SERVARR_INSTANCE_NAME: MyCustomTestInstance
      
      # Service Integration
      QBITTORRENT_URL: http://qbittorrent:8080
      QBITTORRENT_USER: admin
      QBITTORRENT_PASSWORD: adminpass
      
      # Configuration
      CONFIG_PATH: /config/sonarr-config.json
      CONFIG_WATCH: true
      CONFIG_RECONCILE_INTERVAL: 30
      
      # Logging
      LOG_LEVEL: debug
      LOG_FORMAT: pretty
      
      # Health
      HEALTH_PORT: 9000
    ports:
      - "9000:9000"
    volumes:
      - sonarr_config:/config
      - ./examples/sonarr-config.json:/config/sonarr-config.json:ro
      - ./test/tv:/tv
      - ./test/downloads:/downloads
    user: "1000:1000"
    depends_on:
      postgres:
        condition: service_healthy
      sonarr:
        condition: service_started
      qbittorrent:
        condition: service_healthy

volumes:
  postgres_data:
  sonarr_config:
  qbittorrent_config: